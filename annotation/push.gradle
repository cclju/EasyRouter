
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'


def GROUP = "com.caca.router"
def VERSION = "1.2.5"
def ARTIFACT_ID = 'router-annotation'

group = GROUP
version = VERSION

def LABELS = ['aar', 'android', 'router', 'annotation']

def siteUrl = 'https://github.com/cclju/EasyRouter'
def gitUrl =  'https://github.com/cclju/EasyRouter.git'
def issuesUrl = 'https://github.com/cclju/EasyRouter/issues'

def packageName = 'android-router:annotation'
def projectName = 'An Easy Base Router For Android - Annotation'
def projectDescription = '简单、稳定、高性能的组件化路由框架'


task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}


publishing {
    publications {
        bintray(MavenPublication) {
            groupId GROUP
            artifactId ARTIFACT_ID
            version VERSION

            artifact sourcesJar
            from components.java
        }
    }
}


bintray {
    Properties properties = new Properties()
    boolean hasLocalFile = false
    if (project.rootProject.file('local.properties').exists()) {
        hasLocalFile = true
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
    }
    user = hasLocalFile ? properties.getProperty("bintray.user") : ""
    key = hasLocalFile ? properties.getProperty("bintray.apikey") : ""

    publications = ['bintray']
    pkg {
        repo = "maven"
        name = packageName
        desc = projectName
        websiteUrl = siteUrl
        issueTrackerUrl = issuesUrl
        vcsUrl = gitUrl
        labels = LABELS
        licenses = ["Apache-2.0"]
        publicDownloadNumbers = true
        publish = true
    }
}
